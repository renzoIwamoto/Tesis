import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score

# Datos ampliados
data = {
    'PuntuacionMedia': [
        11.07, 14.63, 17.7, 75.07, 33.17, 24.93, 40.1, 91.73, 136.43, 
        1035.83, 546.67, 2687.5, 252.0, 1025.33, 376.33, 3093.33, 4080.0, 3493.33,
        17.67, 18.22, 18.47, 95.03, 114.5, 104.88, 134.31, 96.58, 160.25, 
        3118.75, 2689.84, 2981.25, 1067.77, 1333.33, 1156.63, 4746.67, 5015.38, 4380.0,
        17.6, 18.8, 17.6, 84.4, 45.2, 19.2, 172.0, 173.0, 134.4,
        4825.0, 3940.0, 4710.0, 904.0, 786.0, 762.0,
        -21.0, -21.0, 18.2, 20.4, 30.4, 25.0, 53.8, 162.2, 123.4, 
        1090.0, 1447.5, 1233.33, 988.33, 783.0, 900.0, 
        1089.66, 1129.0, 1375.67, 1144.0, 1137.66, 1196.33, 1247.0, 1202.67, 828.33, 
        900.83, 1110.83, 1244.17, 1109.67, 1054.33, 1125.66, 1161.33, 1009.33, 1046.0,
        31.2, 176.93, 96.0, 95.17, 66.0, 78.27, 24.37, 85.97, 41.6, 
        42.37, 100.9, 161.9, 33.17, 96.0, 114.53, 24.37, 40.77, 48.03,
        17.50, 19.77, 19.47, 18.3, 17.0, 19.83, 18.7, 18.3, 18.63,
        18.63, 18.7, 19.13, 19.20, 18.1, 18.06, 18.43, 17.83, 18.83,
        131.8, 88.9, 78.9, 107.78, 92.03, 36.13, 79.63, 89.06, 106.33,
        87.13, 82.53, 117.83, 95.53, 85.23, 100.53, 34.4, 61.03, 87.1,
        1197.5, 1208.33, 1188.33, 1090.5, 3533.33, 1148.33, 938.33, 1115.0, 1184.17,
        1052.5, 1050.0, 1148.33, 1188.66, 1051.0, 1351.67, 1115.0, 1111.67, 1082.5,
        5520.0, 6240.0, 4053.33, 4075.0, 3893.33, 3226.66, 4967.74, 5173.33, 4693.33,
        4358.62, 5173.33, 3733.33, 4566.67, 3090.91, 4240.0, 3974.19, 2266.66, 213.33
    ],
    'DesviacionEstandar': [
        5.53, 3.36, 2.0, 112.43, 53.38, 6.71, 47.25, 36.24, 80.27, 
        1150.93, 144.87, 1854.86, 120.76, 508.88, 147.61, 1542.06, 1769.07, 1482.1,
        1.68, 2.18, 1.92, 125.97, 133.85, 130.36, 68.85, 48.21, 77.03, 
        1966.37, 1931.39, 1957.17, 614.12, 765.51, 720.57, 2607.12, 2137.63, 1762.14,
        0.49, 1.17, 1.02, 56.21, 17.88, 14.54, 87.24, 89.52, 70.49,
        251.5, 1707.75, 408.23, 243.03, 263.03, 234.55,
        0.0, 0.0, 1.33, 12.0, 6.92, 13.39, 35.05, 36.05, 39.36,
        207.73, 1003.31, 208.2, 177.73, 291.62, 239.18,
        330.08, 485.19, 540.3, 537.54, 381.62, 328.44, 449.35, 433.31, 361.95,
        297.03, 308.94, 158.07, 397.84, 477.41, 335.08, 707.66, 530.72, 508.01,
        22.11, 165.63, 109.12, 115.86, 100.31, 116.11, 12.92, 134.44, 27.27,
        13.48, 111.06, 147.33, 19.7, 109.12, 137.68, 12.92, 16.35, 14.14,
        1.65, 1.33, 1.28, 2.0, 1.69, 1.07, 1.7, 1.64, 1.99,
        1.85, 2.28, 1.59, 1.56, 1.74, 2.26, 1.99, 2.18, 2.03,
        50.03, 38.38, 53.49, 30.99, 31.46, 14.04, 32.43, 24.49, 64.06,
        32.22, 36.35, 51.03, 35.51, 35.32, 39.54, 4.75, 27.92, 37.75,
        154.02, 317.1, 248.64, 257.4, 1726.99, 257.4, 347.05, 224.22, 162.98,
        789.2, 381.99, 328.44, 512.66, 446.44, 249.24, 319.08, 319.42, 325.07,
        3175.57, 3615.67, 2033.67, 1803.98, 2031.57, 1794.6, 3254.89, 2889.86, 2222.15,
        1838.57, 2889.86, 2037.86, 2165.93, 1677.06, 1993.59, 1418.36, 1574.24, 458.79
    ]
}

# Crear el DataFrame
df = pd.DataFrame(data)

# Ajuste del modelo de regresión lineal
X = df[['PuntuacionMedia']]
y = df['DesviacionEstandar']
model = LinearRegression().fit(X, y)
y_pred = model.predict(X)

# Calcular R^2 para la línea de ajuste
r2 = r2_score(y, y_pred)
# Calcular la correlación
correlation = df['PuntuacionMedia'].corr(df['DesviacionEstandar'])

# Gráfico de dispersión con línea de regresión
plt.figure(figsize=(12, 8))
sns.scatterplot(data=df, x='PuntuacionMedia', y='DesviacionEstandar', color='blue', s=50, alpha=0.6, edgecolor='k')
plt.plot(df['PuntuacionMedia'], y_pred, color='red', linestyle='--', linewidth=2, 
         label=f'Regresión Lineal (R² = {r2:.2f}, Corr = {correlation:.2f})')
# Configuración del título y etiquetas
plt.title(f'Relación entre Puntuación Media y Desviación Estándar\ncon Línea de Regresión Lineal', fontsize=15)
plt.xlabel('Puntuación Media', fontsize=12)
plt.ylabel('Desviación Estándar', fontsize=12)
plt.legend()
plt.grid(True, linestyle='--', alpha=0.6)

# Mostrar gráfico
plt.show()


